from gpiozero import LED
import cv2
import mediapipe as mp

# GPIO setup
LED_PIN = 17  # Change this to the GPIO pin you are using for the LED
led = LED(LED_PIN)

# Gesture recognition setup
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils

# Gesture recognition function
def detect_gestures(image):
    with mp_hands.Hands(static_image_mode=False, max_num_hands=1) as hands:
        results = hands.process(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))

        if results.multi_hand_landmarks:
            hand_landmarks = results.multi_hand_landmarks[0]

            # Check if all other fingers except index and middle finger are down
            other_fingers_down = all(hand_landmarks.landmark[i].y > hand_landmarks.landmark[8].y for i in range(21) if i not in [7, 8, 11, 12])

            # Check if only index and middle fingers are up and all other fingers are down
            if (hand_landmarks.landmark[8].y < hand_landmarks.landmark[6].y and
                hand_landmarks.landmark[12].y < hand_landmarks.landmark[10].y and
                other_fingers_down):
                led.on()  # Turn on the LED
            else:
                led.off()  # Turn off the LED

            # Draw landmarks on the image
            mp_drawing.draw_landmarks(
                image,
                hand_landmarks,
                mp_hands.HAND_CONNECTIONS,
                mp_drawing.DrawingSpec(color=(0, 255, 0), thickness=2, circle_radius=4),
                mp_drawing.DrawingSpec(color=(255, 0, 0), thickness=2)
            )

# Main function
def main():
    cap = cv2.VideoCapture(0)

    while cap.isOpened():
        success, image = cap.read()
        if not success:
            break

        detect_gestures(image)

        cv2.imshow('Hand Gestures', image)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()

